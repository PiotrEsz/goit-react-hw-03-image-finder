{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Piotr\\\\Documents\\\\GitHub\\\\goit-react-hw-03-image-finder1\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport Searchbar from './Searchbar/Searchbar';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport Button from './Button/Button';\nimport LoaderSpinner from './Loader/Loader.js';\nimport Modal from './Modal/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      query: '',\n      images: [],\n      page: 1,\n      isLoading: false,\n      showModal: false,\n      selectedImage: null,\n      prevQuery: ''\n    };\n    this.handleSearch = query => {\n      // check if the query is different from the previous query\n      if (query !== this.state.prevQuery) {\n        this.setState({\n          query,\n          images: [],\n          page: 1,\n          prevQuery: query\n        });\n      }\n    };\n    this.fetchImages = async () => {\n      const {\n        query,\n        page\n      } = this.state;\n      const perPage = 12;\n      const apiKey = '32579471-afdc8e0303a1983f0362481fc';\n      const url = `https://pixabay.com/api/?key=${apiKey}&q=${query}&image_type=photo&pretty=true&page=${page}&per_page=${perPage}`;\n      this.setState({\n        isLoading: true\n      });\n      try {\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error('Failed to fetch images');\n        }\n        const data = await response.json();\n        if (data.totalHits === 0) {\n          throw new Error('No images found for the given query');\n        }\n        this.setState(prevState => ({\n          images: [...prevState.images, ...data.hits]\n        }));\n\n        // add delay to\n        setTimeout(() => {\n          this.setState({\n            isLoading: false\n          });\n        }, 500);\n      } catch (error) {\n        console.error(error.message);\n        this.setState({\n          isLoading: false\n        });\n      }\n    };\n    this.scrollToBottom = () => {\n      let currentScrollPosition = window.scrollY;\n      let targetScrollPosition = document.body.scrollHeight - window.innerHeight;\n      let scrollStep = Math.round((targetScrollPosition - currentScrollPosition) / 20);\n      const smoothScroll = () => {\n        currentScrollPosition += scrollStep;\n        window.scrollTo(0, currentScrollPosition);\n        if (currentScrollPosition < targetScrollPosition) {\n          window.requestAnimationFrame(smoothScroll);\n        }\n      };\n      window.requestAnimationFrame(smoothScroll);\n    };\n    this.handleLoadMore = () => {\n      this.setState(prevState => ({\n        page: prevState.page + 1\n      }));\n    };\n    this.handleImageClick = image => {\n      this.setState({\n        showModal: true,\n        selectedImage: image\n      });\n    };\n    this.closeModal = () => {\n      this.setState({\n        showModal: false,\n        selectedImage: null\n      });\n    };\n  }\n  componentDidUpdate(_, prevState) {\n    const {\n      query,\n      page,\n      images\n    } = this.state;\n    if (prevState.query !== query || prevState.page !== page) {\n      // Only fetch images if query or page has changed\n      this.fetchImages();\n    } else if (prevState.images.length !== images.length && prevState.images.length !== 0) {\n      // Scroll to bottom if images have been updated and it's not the initial load\n      this.scrollToBottom();\n    }\n  }\n  render() {\n    const {\n      images,\n      isLoading,\n      showModal,\n      selectedImage\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n        onSubmit: this.handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageGallery, {\n        images: images,\n        onImageClick: this.handleImageClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(LoaderSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 23\n      }, this), images.length > 0 && !isLoading && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.handleLoadMore,\n        children: \"Load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n        image: selectedImage,\n        onClose: this.closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Searchbar","ImageGallery","Button","LoaderSpinner","Modal","jsxDEV","_jsxDEV","App","constructor","arguments","state","query","images","page","isLoading","showModal","selectedImage","prevQuery","handleSearch","setState","fetchImages","perPage","apiKey","url","response","fetch","ok","Error","data","json","totalHits","prevState","hits","setTimeout","error","console","message","scrollToBottom","currentScrollPosition","window","scrollY","targetScrollPosition","document","body","scrollHeight","innerHeight","scrollStep","Math","round","smoothScroll","scrollTo","requestAnimationFrame","handleLoadMore","handleImageClick","image","closeModal","componentDidUpdate","_","length","render","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onImageClick","onClick","onClose"],"sources":["C:/Users/Piotr/Documents/GitHub/goit-react-hw-03-image-finder1/src/components/App.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Searchbar from './Searchbar/Searchbar';\r\nimport ImageGallery from './ImageGallery/ImageGallery';\r\nimport Button from './Button/Button';\r\nimport LoaderSpinner from './Loader/Loader.js';\r\nimport Modal from './Modal/Modal';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    query: '',\r\n    images: [],\r\n    page: 1,\r\n    isLoading: false,\r\n    showModal: false,\r\n    selectedImage: null,\r\n    prevQuery: '',\r\n  };\r\n\r\n  componentDidUpdate(_, prevState) {\r\n    const { query, page, images } = this.state;\r\n    if (prevState.query !== query || prevState.page !== page) {\r\n      // Only fetch images if query or page has changed\r\n      this.fetchImages();\r\n    } else if (\r\n      prevState.images.length !== images.length &&\r\n      prevState.images.length !== 0\r\n    ) {\r\n      // Scroll to bottom if images have been updated and it's not the initial load\r\n      this.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  handleSearch = query => {\r\n    // check if the query is different from the previous query\r\n    if (query !== this.state.prevQuery) {\r\n      this.setState({ query, images: [], page: 1, prevQuery: query });\r\n    }\r\n  };\r\n\r\n  fetchImages = async () => {\r\n    const { query, page } = this.state;\r\n    const perPage = 12;\r\n    const apiKey = '32579471-afdc8e0303a1983f0362481fc';\r\n    const url = `https://pixabay.com/api/?key=${apiKey}&q=${query}&image_type=photo&pretty=true&page=${page}&per_page=${perPage}`;\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch images');\r\n      }\r\n\r\n      const data = await response.json();\r\n      if (data.totalHits === 0) {\r\n        throw new Error('No images found for the given query');\r\n      }\r\n\r\n      this.setState(prevState => ({\r\n        images: [...prevState.images, ...data.hits],\r\n      }));\r\n\r\n      // add delay to\r\n      setTimeout(() => {\r\n        this.setState({ isLoading: false });\r\n      }, 500);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      this.setState({ isLoading: false });\r\n    }\r\n  };\r\n\r\n  scrollToBottom = () => {\r\n    let currentScrollPosition = window.scrollY;\r\n    let targetScrollPosition = document.body.scrollHeight - window.innerHeight;\r\n    let scrollStep = Math.round(\r\n      (targetScrollPosition - currentScrollPosition) / 20\r\n    );\r\n\r\n    const smoothScroll = () => {\r\n      currentScrollPosition += scrollStep;\r\n      window.scrollTo(0, currentScrollPosition);\r\n\r\n      if (currentScrollPosition < targetScrollPosition) {\r\n        window.requestAnimationFrame(smoothScroll);\r\n      }\r\n    };\r\n\r\n    window.requestAnimationFrame(smoothScroll);\r\n  };\r\n\r\n  handleLoadMore = () => {\r\n    this.setState(prevState => ({ page: prevState.page + 1 }));\r\n  };\r\n\r\n  handleImageClick = image => {\r\n    this.setState({ showModal: true, selectedImage: image });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ showModal: false, selectedImage: null });\r\n  };\r\n\r\n  render() {\r\n    const { images, isLoading, showModal, selectedImage } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Searchbar onSubmit={this.handleSearch} />\r\n        <ImageGallery images={images} onImageClick={this.handleImageClick} />\r\n        {isLoading && <LoaderSpinner />}\r\n        {images.length > 0 && !isLoading && (\r\n          <Button onClick={this.handleLoadMore}>Load more</Button>\r\n        )}\r\n        {showModal && <Modal image={selectedImage} onClose={this.closeModal} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}